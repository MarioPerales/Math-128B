function linear_shooting(p,q,r,a,b,alpha,beta,N,exact_solution)
if(nargin < 9)
    exact_solution = @(x) 0;
end

h = (b-a)/N;
u = [alpha,0; zeros(N+1,2)]';
v = [0,1; zeros(N+1,2)]';

for i=1:N
    x = a + (i - 1)*h;
    k_1_1 = h*u(2,i);
    k_1_2 = h*(p(x)*u(2,i) + q(x)*u(1,i) + r(x));
    k_2_1 = h*(u(2,i) + 1/2*k_1_2);
    k_2_2 = h*(p(x + h/2)*(u(2,i) + 1/2*k_1_2) + q(x + h/2)*(u(1,i) + 1/2*k_1_1) + r(x + h/2));
    k_3_1 = h*(u(2,i) + 1/2*k_2_2);
    k_3_2 = h*(p(x + h/2)*(u(2,i) + 1/2*k_2_2) + q(x + h/2)*(u(1,i) + 1/2*k_2_1) + r(x + h/2));
    k_4_1 = h*(u(2,i) + k_3_2);
    k_4_2 = h*(p(x + h)*(u(2,i) + k_3_2) + q(x + h)*(u(1,i) + k_3_1) + r(x + h));
    u(1,i+1) = u(1,i) + 1/6*(k_1_1 + 2*k_2_1 + 2*k_3_1 + k_4_1);
    u(2,i+1) = u(2,i) + 1/6*(k_1_2 + 2*k_2_2 + 2*k_3_2 + k_4_2);
    
    k_1_1 = h*v(2,i);
    k_1_2 = h*(p(x)*v(2,i) + q(x)*v(1,i));
    k_2_1 = h*(v(2,i) + 1/2*k_1_2);
    k_2_2 = h*(p(x + h/2)*(v(2,i) + 1/2*k_1_2) + q(x + h/2)*(v(1,i) + 1/2*k_1_1));
    k_3_1 = h*(v(2,i) + 1/2*k_2_2);
    k_3_2 = h*(p(x + h/2)*(v(2,i) + 1/2*k_2_2) + q(x + h/2)*(v(1,i) + 1/2*k_2_1));
    k_4_1 = h*(v(2,i) + k_3_2);
    k_4_2 = h*(p(x + h)*(v(2,i) + k_3_2) + q(x + h)*(v(1,i) + k_3_1));
    v(1,i+1) = v(1,i) + 1/6*(k_1_1 + 2*k_2_1 + 2*k_3_1 + k_4_1);
    v(2,i+1) = v(2,i) + 1/6*(k_1_2 + 2*k_2_2 + 2*k_3_2 + k_4_2);
end

w = [0,0]';

w(1,1) = alpha;
w(2,1) = (beta - u(1,N+1))/v(1,N+1);
fprintf('w_1 ~= y(x)\n');
fprintf('w_2 ~= y(x)_prime\n');
fprintf('      x              w_1              w_2          |y(x) - w_1|\n');
fprintf('---------------------------------------------------------------\n');
for i = 1:N+1
    W1 = u(1,i) + w(2,1)*v(1,i);
    W2 = u(2,i) + w(2,1)*v(2,i);
    x = a + (i-1)*h;
    fprintf('%12.9f    %12.9f     %12.9f     %12.9f \n',x,W1,W2,abs(exact_solution(x) - W1));
end